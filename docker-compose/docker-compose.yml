services:
  mongodb:
    image: mongo:latest
    container_name: ${MONGO_CONTAINER_NAME:-mongodb}
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-mongouser}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-mongopass}
    ports:
      - ${MONGO_PORT:-27017}:${MONGO_PORT:-27017}
    volumes:
      - mongodb:/mongodb 
      
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER:-mongouser}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-mongopass}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN:-mongoexpress}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD:-mongoexpresspass}
      - ME_CONFIG_MONGODB_SERVER=${MONGO_CONTAINER_NAME:-mongodb}
      - ME_CONFIG_MONGODB_PORT=${MONGO_PORT:-27017}
    ports:
      - ${MONGOEXPRESS_PORT:-8081}:${MONGOEXPRESS_PORT:-8081}
    volumes:
      - mongo_express:/mongo_express  
      
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true  
      
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring
      
  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - 3000:3000
    networks:
      - monitoring
      
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring

volumes:
  mongodb:
  mongo_express:
  
networks:
  monitoring: